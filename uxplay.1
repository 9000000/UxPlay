.TH UXPLAY "1" "April 2022" "1.50" "User Commands"
.SH NAME
uxplay \- start AirPlay server
.SH SYNOPSIS
.B uxplay
[\fI\,-n name\/\fR] [\fI\,-s wxh\/\fR] [\fI\,-p \/\fR[\fI\,n\/\fR]] [more \fI OPTIONS \/\fR ...]
.SH DESCRIPTION
UxPlay 1.50: An open\-source AirPlay mirroring server based on RPiPlay
.SH OPTIONS
.TP
.B
\fB\-n\fR name   Specify the network name of the AirPlay server
.TP
\fB\-nh\fR       Do \fBNOT\fR append "@\fIhostname\fR" at end of the AirPlay server name
.TP
.B
\fB\-s\fR wxh[@r]Set display resolution [refresh_rate] default 1920x1080[@60]
.TP
\fB\-o\fR        Set mirror "overscanned" mode on (not usually needed)
.TP
\fB-fs\fR       Full-screen (only with Wayland and VAAPI plugins)
.TP
\fB\-fps\fR n    Set maximum allowed streaming framerate, default 30
.TP
\fB\-f\fR {H|V|I}Horizontal|Vertical flip, or both=Inversion=rotate 180 deg
.TP
\fB\-r\fR {R|L}  Rotate 90 degrees Right (cw) or Left (ccw)
.TP
\fB\-p\fR        Use legacy ports UDP 6000:6001:7011 TCP 7000:7001:7100
.TP
\fB\-p\fR n      Use TCP and UDP ports n,n+1,n+2. range 1024\-65535
.IP
   use "\-p n1,n2,n3" to set each port, "n1,n2" for n3 = n2+1
.IP
   "\-p tcp n" or "\-p udp n" sets TCP or UDP ports separately.
.PP
.TP
\fB\-m\fR        Use random MAC address (use for concurrent UxPlay's)
.TP
\fB\-t\fR n      Relaunch server if no connection existed in last n seconds
.TP
\fB\-vp\fI prs \fR  Choose GStreamer h264 parser; default "h264parse"
.TP
\fB\-vd\fI dec \fR  Choose GStreamer h264 decoder; default "decodebin"
.IP
   choices: (software) avdec_h264; (hardware) v4l2h264dec,
.IP
   nvdec, nvh264dec, vaapih264dec, vtdec, ...
.TP
\fB\-vc\fI cnv \fR  Choose GStreamer videoconverter; default "videoconvert"
.IP
   another choice when using v4l2h264dec: v4l2convert.
.TP
\fB\-vs\fI sink\fR  Choose the GStreamer videosink; default "autovideosink"
.IP
   choices: ximagesink,xvimagesink,vaapisink,glimagesink,
.IP
   gtksink,waylandsink,osximagesink,kmssink,fpsdisplaysink,...
.PP
.TP
\fB\-vs\fR 0     Streamed audio only, with no video display window.
.TP
\fB\-rpi\fR      Raspberry Pi "Lite" GPU video with KMS framebuffer.
.TP
\fB\-rpigl\fR    Raspberry Pi GPU video with OpenGL.
.TP
\fB\-rpiwl\fR    Raspberry Pi GPU video with Wayland compositor.
.TP
\fB\-avdec\fR    Force software h264 video decoding with libav decoder.
.TP
\fB\-as\fI sink\fR  Choose the GStreamer audiosink; default "autoaudiosink"
.IP
   choices:pulsesink,alsasink,osssink,oss4sink,osxaudiosink,..
.PP
.TP
\fB\-as\fR 0     (or \fB\-a\fR) Turn audio off, streamed video only.
.TP
\fB\-reset\fR n  Reset after 3n seconds client silence (default 10, 0=never).
.TP
\fB\-nc\fR       Do not close video window when client stops mirroring
.TP
\fB\-FPSdata\fR  Show video-streaming performance reports sent by client.
.TP
\fB\-vdmp\fR [n] Dump h264 video output to "fn.h264"; fn="videodump", change
.IP
    with "-vdmp [n] filename". If [n] is given, file fn.x.h264
.IP
    x=1,2,.. opens whenever a new SPS/PPS NAL arrives, and <=n
.IP
    NAL units are dumped.
.PP
.TP
\fB\-admp\fR [n] Dump audio output to "fn.x.fmt", fmt ={aac, alac, aud}, x
.IP
    =1,2,..; fn="audiodump"; change with "-admp [n] filename".
.IP
    x increases when audio format changes. If n is given, <= n
.IP
    audio packets are dumped. "aud"= unknown format.
.PP
.TP
\fB\-d\fR        Enable debug logging
.TP
\fB\-v\fR or \fB\-h\fR  Displays this help and version information
